#! /bin/bash

# TODO: add condition: if file exists, do not wget

#mkdir ./tmp

# TODO: store URL in a variable

# download HTML file of CVE entry
# possibly replace filename with shell positional argument
# TODO: add wget -i ./FILENAME to read URL's form file

# FIXME: Replace with appropriate variables
wget https://access.redhat.com/security/cve/CVE-2016-5420
# -O ./tmp/CVE-2016-5420

SOURCE_HTML=./CVE-2016-5420

SOURCE_HTML_NAME="CVE-2016-5420"

#SOURCE_HTML_NAME=$(echo $1 | egrep -io "(CVE-)201[[:digit:]]-[[:digit:]]{4,7})")
echo "[DEBUG]: Saved source HTML file as ${SOURCE_HTML_NAME}"

# TODO: standardize regex to POSIX-compliant regex
# get first occurrence of the numerical part of the CVE ID
CVE_NUM_ID=$(echo $SOURCE_HTML_NAME | egrep -io "CVE-201[[:digit:]]-[0-9]{3,6}" | egrep -o -m1 "[0-9]{4}-[0-9]*")

# Get BZ ID from HTML file
BZ_NUM_ID=$(cat ${SOURCE_HTML} | egrep -o "(id=)1[[:digit:]]{6}" | egrep -o "[0-9]*")

echo "[DEBUG]: ${BZ_NUM_ID}"

# get full issues summary
# FIXME: add matching of non-alphanumeric characters in summaries
SUMMARY_FULL=$(cat ${SOURCE_HTML} | egrep -o "CVE-201[[:digit:]]-[0-9]{3,6}.*:[[:space:]][[:print:]]*")
echo "[DEBUG]: ${SUMMARY_FULL}"

# Get affected component and summary values from issue desc

# process full summary to obtain:

# affected compoennt name
COMPONENT_NAME=$(echo $SUMMARY_FULL | egrep -o "[a-Z]*:" | egrep -o "[a-Z]*")

# summary text
SUMMARY_TEXT=$(echo $SUMMARY_FULL | egrep -o ":[[:space:]][a-Z,0-9,[:space:]]*" | egrep -o "[a-Z,0-9,[:space:]]*[a-z]*")

echo "[DEBUG]: ${SUMMARY_TEXT}"

# export replaceable values as anvironment variables to allow substitution
# TODO: any way to do this without exporting to env?
export CVE_NUM_ID
export COMPONENT_NAME
export SUMMARY_TEXT
export BZ_NUM_ID

# substitute values and write to file
# TODO: Externalize template and output file name into variables.
# TODO: any way to do this without using envsubst?
envsubst < test-template.adoc >> test-output.adoc

# display message for the user
echo "Auto-generated RN entry for CVE-${CVE_NUM_ID}"
echo "============"
echo "Substituted extracted values:"
echo "============"
echo "CVE ID: CVE-${CVE_NUM_ID}"
echo "Affected Component: ${COMPONENT_NAME}"
echo "Issues Summary: ${SUMMARY_TEXT}"
echo "Bugzilla ID: ${BZ_NUM_ID}"
echo "============"

#TODO: rm the html file when done
#rm -r ./tmp
rm $SOURCE_HTML

exit 0
